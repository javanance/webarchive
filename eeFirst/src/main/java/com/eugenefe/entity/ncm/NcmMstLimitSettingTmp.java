package com.eugenefe.entity.ncm;
// Generated Dec 21, 2016 2:18:11 PM by Hibernate Tools 5.2.0.CR1 with Custom Template_takion!!!!!! 

import javax.persistence.Id;
import javax.persistence.Transient;
import com.eugenefe.util.Navigatable;

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.IdClass;
import javax.persistence.Table;

/**
 * NcmMstLimitSettingTmp generated by hbm2java
 */

@Entity(name = "NaviNcmMstLimitSettingTmp")
@IdClass(value = NcmMstLimitSettingTmpId.class)
@Table(name = "NCM_MST_LIMIT_SETTING_TMP", schema = "NCM")
public class NcmMstLimitSettingTmp implements java.io.Serializable, Navigatable {

	private String applyStDate;
	private String applyCd;
	private String lmtTypeCd;
	private String applyEndDate;
	private BigDecimal lmtMinAmt;
	private BigDecimal lmtMaxAmt;
	private String useYn;
	private String srcTable;
	private String updateId;
	private Date lastUpdate;

	public NcmMstLimitSettingTmp() {
	}

	@Id
	@Column(name = "APPLY_ST_DATE", nullable = false, length = 8)
	public String getApplyStDate() {
		return this.applyStDate;
	}

	public void setApplyStDate(String applyStDate) {
		this.applyStDate = applyStDate;
	}

	@Id
	@Column(name = "APPLY_CD", nullable = false, length = 10)
	public String getApplyCd() {
		return this.applyCd;
	}

	public void setApplyCd(String applyCd) {
		this.applyCd = applyCd;
	}

	@Id
	@Column(name = "LMT_TYPE_CD", nullable = false, length = 20)
	public String getLmtTypeCd() {
		return this.lmtTypeCd;
	}

	public void setLmtTypeCd(String lmtTypeCd) {
		this.lmtTypeCd = lmtTypeCd;
	}

	@Id
	@Column(name = "APPLY_END_DATE", length = 8)
	public String getApplyEndDate() {
		return this.applyEndDate;
	}

	public void setApplyEndDate(String applyEndDate) {
		this.applyEndDate = applyEndDate;
	}

	@Id
	@Column(name = "LMT_MIN_AMT", nullable = false, precision = 20)
	public BigDecimal getLmtMinAmt() {
		return this.lmtMinAmt;
	}

	public void setLmtMinAmt(BigDecimal lmtMinAmt) {
		this.lmtMinAmt = lmtMinAmt;
	}

	@Id
	@Column(name = "LMT_MAX_AMT", nullable = false, precision = 20)
	public BigDecimal getLmtMaxAmt() {
		return this.lmtMaxAmt;
	}

	public void setLmtMaxAmt(BigDecimal lmtMaxAmt) {
		this.lmtMaxAmt = lmtMaxAmt;
	}

	@Id
	@Column(name = "USE_YN", length = 1)
	public String getUseYn() {
		return this.useYn;
	}

	public void setUseYn(String useYn) {
		this.useYn = useYn;
	}

	@Id
	@Column(name = "SRC_TABLE", length = 20)
	public String getSrcTable() {
		return this.srcTable;
	}

	public void setSrcTable(String srcTable) {
		this.srcTable = srcTable;
	}

	@Id
	@Column(name = "UPDATE_ID", length = 20)
	public String getUpdateId() {
		return this.updateId;
	}

	public void setUpdateId(String updateId) {
		this.updateId = updateId;
	}

	@Id
	@Column(name = "LAST_UPDATE", length = 7)
	public Date getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	/**
	 * idString
	 * @return String
	 */
	@Transient
	public String idString() {
		StringBuffer buffer = new StringBuffer();
		buffer.append("#").append(getApplyStDate());
		buffer.append("#").append(getApplyCd());
		buffer.append("#").append(getLmtTypeCd());
		buffer.append("#").append(getApplyEndDate());
		buffer.append("#").append(getLmtMinAmt());
		buffer.append("#").append(getLmtMaxAmt());
		buffer.append("#").append(getUseYn());
		buffer.append("#").append(getSrcTable());
		buffer.append("#").append(getUpdateId());
		buffer.append("#").append(getLastUpdate());

		String rst = buffer.toString();

		return rst;
	}

	@Transient
	@Override
	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof NcmMstLimitSettingTmp))
			return false;
		NcmMstLimitSettingTmp castOther = (NcmMstLimitSettingTmp) other;

		return this.idString().equals(castOther.idString());
	}

	@Transient
	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result + (getApplyStDate() == null ? 0 : this.getApplyStDate().hashCode());
		result = 37 * result + (getApplyCd() == null ? 0 : this.getApplyCd().hashCode());
		result = 37 * result + (getLmtTypeCd() == null ? 0 : this.getLmtTypeCd().hashCode());
		result = 37 * result + (getApplyEndDate() == null ? 0 : this.getApplyEndDate().hashCode());
		result = 37 * result + (getLmtMinAmt() == null ? 0 : this.getLmtMinAmt().hashCode());
		result = 37 * result + (getLmtMaxAmt() == null ? 0 : this.getLmtMaxAmt().hashCode());
		result = 37 * result + (getUseYn() == null ? 0 : this.getUseYn().hashCode());
		result = 37 * result + (getSrcTable() == null ? 0 : this.getSrcTable().hashCode());
		result = 37 * result + (getUpdateId() == null ? 0 : this.getUpdateId().hashCode());
		result = 37 * result + (getLastUpdate() == null ? 0 : this.getLastUpdate().hashCode());
		return result;
	}

}
