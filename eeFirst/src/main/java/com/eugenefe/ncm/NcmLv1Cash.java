package com.eugenefe.ncm;
// Generated Dec 7, 2016 4:47:20 PM by Hibernate Tools 5.2.0.Beta1 with Custom Template_takion!!!!!! 

import javax.persistence.Id;
import javax.persistence.Transient;

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.IdClass;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * NcmLv1Cash generated by hbm2java
 */

@Entity
@IdClass(value = NcmLv1CashId.class)
@Table(name = "NCM_LV1_CASH", schema = "NCM")
public class NcmLv1Cash implements java.io.Serializable {

	private String baseDate;
	private String cashCd;
	private BigDecimal todayInflowAmt;
	private BigDecimal todayOutflowAmt;
	private BigDecimal monBal;
	private BigDecimal accuBal;
	private BigDecimal continuBal;
	private BigDecimal bdayAccuBal;
	private BigDecimal bdayContinuBal;
	private String srcTable;
	private String updateId;
	private Date lastUpdate;

	public NcmLv1Cash() {
	}

	@Id
	@Column(name = "BASE_DATE", nullable = false, length = 8)
	public String getBaseDate() {
		return this.baseDate;
	}

	public void setBaseDate(String baseDate) {
		this.baseDate = baseDate;
	}

	@Id
	@Column(name = "CASH_CD", nullable = false, length = 20)
	public String getCashCd() {
		return this.cashCd;
	}

	public void setCashCd(String cashCd) {
		this.cashCd = cashCd;
	}

	@Column(name = "TODAY_INFLOW_AMT", precision = 20)
	public BigDecimal getTodayInflowAmt() {
		return this.todayInflowAmt;
	}

	public void setTodayInflowAmt(BigDecimal todayInflowAmt) {
		this.todayInflowAmt = todayInflowAmt;

	}

	@Column(name = "TODAY_OUTFLOW_AMT", precision = 20)
	public BigDecimal getTodayOutflowAmt() {
		return this.todayOutflowAmt;
	}

	public void setTodayOutflowAmt(BigDecimal todayOutflowAmt) {
		this.todayOutflowAmt = todayOutflowAmt;

	}

	@Column(name = "MON_BAL", precision = 20)
	public BigDecimal getMonBal() {
		return this.monBal;
	}

	public void setMonBal(BigDecimal monBal) {
		this.monBal = monBal;

	}

	@Column(name = "ACCU_BAL", precision = 20)
	public BigDecimal getAccuBal() {
		return this.accuBal;
	}

	public void setAccuBal(BigDecimal accuBal) {
		this.accuBal = accuBal;

	}

	@Column(name = "CONTINU_BAL", precision = 20)
	public BigDecimal getContinuBal() {
		return this.continuBal;
	}

	public void setContinuBal(BigDecimal continuBal) {
		this.continuBal = continuBal;

	}

	@Column(name = "BDAY_ACCU_BAL", precision = 20)
	public BigDecimal getBdayAccuBal() {
		return this.bdayAccuBal;
	}

	public void setBdayAccuBal(BigDecimal bdayAccuBal) {
		this.bdayAccuBal = bdayAccuBal;

	}

	@Column(name = "BDAY_CONTINU_BAL", precision = 20)
	public BigDecimal getBdayContinuBal() {
		return this.bdayContinuBal;
	}

	public void setBdayContinuBal(BigDecimal bdayContinuBal) {
		this.bdayContinuBal = bdayContinuBal;

	}

	@Column(name = "SRC_TABLE", length = 20)
	public String getSrcTable() {
		return this.srcTable;
	}

	public void setSrcTable(String srcTable) {
		this.srcTable = srcTable;

	}

	@Column(name = "UPDATE_ID", length = 20)
	public String getUpdateId() {
		return this.updateId;
	}

	public void setUpdateId(String updateId) {
		this.updateId = updateId;

	}

	@Temporal(TemporalType.DATE)
	@Column(name = "LAST_UPDATE", length = 7)
	public Date getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;

	}

	/**
	 * idString
	 * @return String
	 */
	@Transient
	public String idString() {
		StringBuffer buffer = new StringBuffer();
		buffer.append("#").append(getBaseDate());
		buffer.append("#").append(getCashCd());

		String rst = buffer.toString();

		return rst;
	}

	@Transient
	@Override
	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof NcmLv1Cash))
			return false;
		NcmLv1Cash castOther = (NcmLv1Cash) other;

		return this.idString().equals(castOther.idString());
	}

	@Transient
	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result + (getBaseDate() == null ? 0 : this.getBaseDate().hashCode());
		result = 37 * result + (getCashCd() == null ? 0 : this.getCashCd().hashCode());
		return result;
	}

}
