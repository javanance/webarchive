package com.eugenefe.ncm;
// Generated Dec 8, 2016 3:49:34 PM by Hibernate Tools 5.2.0.Beta1 with Custom Template_takion!!!!!! 

import javax.persistence.Id;
import javax.persistence.Transient;
import com.eugenefe.util.Navigatable;

/**
 * NcmLv2PortRiskId generated by hbm2java
 */

public class NcmLv2PortRiskId implements java.io.Serializable, Navigatable {

	private String baseDate;
	private String cptlDivCd;
	private String yieldLclssCd;
	private String yieldDivCd;
	private String timeHorizonCd;
	private String confiLevelCd;

	public NcmLv2PortRiskId() {
	}

	public String getBaseDate() {
		return this.baseDate;
	}

	public void setBaseDate(String baseDate) {
		this.baseDate = baseDate;

	}

	public String getCptlDivCd() {
		return this.cptlDivCd;
	}

	public void setCptlDivCd(String cptlDivCd) {
		this.cptlDivCd = cptlDivCd;

	}

	public String getYieldLclssCd() {
		return this.yieldLclssCd;
	}

	public void setYieldLclssCd(String yieldLclssCd) {
		this.yieldLclssCd = yieldLclssCd;

	}

	public String getYieldDivCd() {
		return this.yieldDivCd;
	}

	public void setYieldDivCd(String yieldDivCd) {
		this.yieldDivCd = yieldDivCd;

	}

	public String getTimeHorizonCd() {
		return this.timeHorizonCd;
	}

	public void setTimeHorizonCd(String timeHorizonCd) {
		this.timeHorizonCd = timeHorizonCd;

	}

	public String getConfiLevelCd() {
		return this.confiLevelCd;
	}

	public void setConfiLevelCd(String confiLevelCd) {
		this.confiLevelCd = confiLevelCd;

	}

	/**
	 * idString
	 * @return String
	 */
	public String idString() {
		StringBuffer buffer = new StringBuffer();
		buffer.append("#").append(getBaseDate());
		buffer.append("#").append(getCptlDivCd());
		buffer.append("#").append(getYieldLclssCd());
		buffer.append("#").append(getYieldDivCd());
		buffer.append("#").append(getTimeHorizonCd());
		buffer.append("#").append(getConfiLevelCd());

		String rst = buffer.toString();

		return rst;
	}

	@Override
	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof NcmLv2PortRiskId))
			return false;
		NcmLv2PortRiskId castOther = (NcmLv2PortRiskId) other;

		return ((this.getBaseDate() == castOther.getBaseDate())
				|| (this.getBaseDate() != null && castOther.getBaseDate() != null && this.getBaseDate().equals(castOther.getBaseDate())))
				&& ((this.getCptlDivCd() == castOther.getCptlDivCd())
						|| (this.getCptlDivCd() != null && castOther.getCptlDivCd() != null && this.getCptlDivCd().equals(castOther.getCptlDivCd())))
				&& ((this.getYieldLclssCd() == castOther.getYieldLclssCd())
						|| (this.getYieldLclssCd() != null && castOther.getYieldLclssCd() != null && this.getYieldLclssCd().equals(castOther.getYieldLclssCd())))
				&& ((this.getYieldDivCd() == castOther.getYieldDivCd())
						|| (this.getYieldDivCd() != null && castOther.getYieldDivCd() != null && this.getYieldDivCd().equals(castOther.getYieldDivCd())))
				&& ((this.getTimeHorizonCd() == castOther.getTimeHorizonCd())
						|| (this.getTimeHorizonCd() != null && castOther.getTimeHorizonCd() != null && this.getTimeHorizonCd().equals(castOther.getTimeHorizonCd())))
				&& ((this.getConfiLevelCd() == castOther.getConfiLevelCd())
						|| (this.getConfiLevelCd() != null && castOther.getConfiLevelCd() != null && this.getConfiLevelCd().equals(castOther.getConfiLevelCd())));
	}

	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result + (getBaseDate() == null ? 0 : this.getBaseDate().hashCode());
		result = 37 * result + (getCptlDivCd() == null ? 0 : this.getCptlDivCd().hashCode());
		result = 37 * result + (getYieldLclssCd() == null ? 0 : this.getYieldLclssCd().hashCode());
		result = 37 * result + (getYieldDivCd() == null ? 0 : this.getYieldDivCd().hashCode());
		result = 37 * result + (getTimeHorizonCd() == null ? 0 : this.getTimeHorizonCd().hashCode());
		result = 37 * result + (getConfiLevelCd() == null ? 0 : this.getConfiLevelCd().hashCode());
		return result;
	}

}
