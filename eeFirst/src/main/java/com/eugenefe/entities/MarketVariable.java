package com.eugenefe.entities;

// Generated Apr 10, 2013 4:09:22 PM by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.swing.text.Position;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import com.eugenefe.enums.model.EBoolean;
import com.eugenefe.enums.model.EMarketVariableType;
import com.eugenefe.enums.model.EShockType;
import com.eugenefe.qualifiers.AnnoMethodTree;
import com.eugenefe.qualifiers.AnnoNavigationFilter;

/**
 * MarketVariable generated by hbm2java
 */
@Entity(name="MarketVariableNew")
@Table(name = "MARKET_VARIABLE")
// @Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)
// @Inheritance(strategy = InheritanceType.JOINED)
@AnnoNavigationFilter
public class MarketVariable implements java.io.Serializable, Comparable<MarketVariable> {

	private String mvId;
	private String mvName;
	private EMarketVariableType mvType;
	private String productYN;
	private String riskFactorYN;
	private EBoolean underlyingYN;
	// private Synthetics synthetics;
	// private StockIndex stockIndex;
	// private Stock stock;
	// private Set<ScenarioDetail> scenarioDetails = new
	// HashSet<ScenarioDetail>(0);
	// private RiskFactor riskFactor;
	// private Set<ProductCashflow> productCashflows = new
	// HashSet<ProductCashflow>(0);
	// private Set<PositionGreeks> positionGreekses = new
	// HashSet<PositionGreeks>(0);
	// private MacroIndex macroIndex;
	// private InterestRate interestRate;
	// private FxCash fxCash;
	// private Futures futuresByMvId;
	// private Set<Futures> futuresesForUnderlyingId = new HashSet<Futures>(0);
	// private Set<EtfPdf> etfPdfs = new HashSet<EtfPdf>(0);
	// private Etf etf;
	// private Set<SyntheticDetail> syntheticDetails = new
	// HashSet<SyntheticDetail>(0);
	// private BondIndex bondIndex;
	// private Bond bond;
	// private Options optionsByMvId;
	// private Set<Options> optionsesForUnderlyingId = new HashSet<Options>(0);
	private List<Position> positions = new ArrayList<Position>();

	public MarketVariable() {
	}

	public MarketVariable(String mvId) {
		this.mvId = mvId;
	}

	// public MarketVariable(String mvId, Synthetics synthetics, StockIndex
	// stockIndex, Stock stock,
	// Set<ScenarioDetail> scenarioDetails, RiskFactor riskFactor,
	// Set<ProductCashflow> productCashflows,
	// Set<PositionGreeks> positionGreekses, MacroIndex macroIndex, InterestRate
	// interestRate, FxCash fxCash,
	// Futures futuresByMvId, Set<Futures> futuresesForUnderlyingId, Set<EtfPdf>
	// etfPdfs, Etf etf,
	// Set<SyntheticDetail> syntheticDetails, BondIndex bondIndex, Bond bond,
	// Options optionsByMvId,
	// Set<Options> optionsesForUnderlyingId, Set<Position> positions) {
	// this.mvId = mvId;
	// this.synthetics = synthetics;
	// this.stockIndex = stockIndex;
	// this.stock = stock;
	// this.scenarioDetails = scenarioDetails;
	// this.riskFactor = riskFactor;
	// this.productCashflows = productCashflows;
	// this.positionGreekses = positionGreekses;
	// this.macroIndex = macroIndex;
	// this.interestRate = interestRate;
	// this.fxCash = fxCash;
	// this.futuresByMvId = futuresByMvId;
	// this.futuresesForUnderlyingId = futuresesForUnderlyingId;
	// this.etfPdfs = etfPdfs;
	// this.etf = etf;
	// this.syntheticDetails = syntheticDetails;
	// this.bondIndex = bondIndex;
	// this.bond = bond;
	// this.optionsByMvId = optionsByMvId;
	// this.optionsesForUnderlyingId = optionsesForUnderlyingId;
	// this.positions = positions;
	// }
	//
	@Id
	@Column(name = "MV_ID", unique = true, nullable = false, length = 20)
	@NotNull
	@Size(max = 20)
	@AnnoMethodTree(order = 10, init = true, aggregatable = true)
	public String getMvId() {
		return this.mvId;
	}

	public void setMvId(String mvId) {
		this.mvId = mvId;
	}

	@Column(name = "MV_NAME")
	@AnnoMethodTree(order = 20, init = true, aggregatable = true)
	public String getMvName() {
		return mvName;
	}

	public void setMvName(String mvName) {
		this.mvName = mvName;
	}

	@Column(name = "MV_TYPE")
	@Enumerated(EnumType.STRING)
	@AnnoMethodTree(order = 30, init = true, aggregatable = true)
	public EMarketVariableType getMvType() {
		return mvType;
	}

	public void setMvType(EMarketVariableType mvType) {
		this.mvType = mvType;
	}

	// @Column(name = "MV_TYPE")
	// public String getMvType() {
	// return mvType;
	// }
	// public void setMvType(String mvType) {
	// this.mvType = mvType;
	// }

	@Column(name = "PRODUCT_YN")
	@AnnoMethodTree(order = 40, init = true, aggregatable = true)
	public String getProductYN() {
		return productYN;
	}

	public void setProductYN(String productYN) {
		this.productYN = productYN;
	}

	@Column(name = "RF_YN")
	@AnnoMethodTree(order = 50, init = true, aggregatable = true)
	public String getriskFactorYN() {
		return riskFactorYN;
	}

	public void setriskFactorYN(String riskFactorYN) {
		this.riskFactorYN = riskFactorYN;
	}

	@Column(name = "UNDERLYING_YN")
	@Enumerated(EnumType.STRING)
	@AnnoMethodTree(order = 60, init = true, aggregatable = true)
	public EBoolean getUnderlyingYN() {
		return underlyingYN;
	}

	public void setUnderlyingYN(EBoolean underlyingYN) {
		this.underlyingYN = underlyingYN;
	}

	//
	// @OneToOne(fetch = FetchType.LAZY, mappedBy = "marketVariable")
	// @Size(max = 20)
	// public Synthetics getSynthetics() {
	// return this.synthetics;
	// }
	//
	// public void setSynthetics(Synthetics synthetics) {
	// this.synthetics = synthetics;
	// }
	//
	// @OneToOne(fetch = FetchType.LAZY, mappedBy = "marketVariable")
	// @Size(max = 20)
	// public StockIndex getStockIndex() {
	// return this.stockIndex;
	// }
	//
	// public void setStockIndex(StockIndex stockIndex) {
	// this.stockIndex = stockIndex;
	// }
	//
	// @OneToOne(fetch = FetchType.LAZY, mappedBy = "marketVariable")
	// @Size(max = 20)
	// public Stock getStock() {
	// return this.stock;
	// }
	// public void setStock(Stock stock) {
	// this.stock = stock;
	// }
	//
	// @OneToMany(fetch = FetchType.LAZY, mappedBy = "marketVariable")
	// public Set<ScenarioDetail> getScenarioDetails() {
	// return this.scenarioDetails;
	// }
	//
	// public void setScenarioDetails(Set<ScenarioDetail> scenarioDetails) {
	// this.scenarioDetails = scenarioDetails;
	// }
	//
	// @OneToOne(fetch = FetchType.LAZY, mappedBy = "marketVariable")
	// @Size(max = 20)
	// public RiskFactor getRiskFactor() {
	// return this.riskFactor;
	// }
	//
	// public void setRiskFactor(RiskFactor riskFactor) {
	// this.riskFactor = riskFactor;
	// }
	//
	// @OneToMany(fetch = FetchType.LAZY, mappedBy = "marketVariable")
	// public Set<ProductCashflow> getProductCashflows() {
	// return this.productCashflows;
	// }
	//
	// public void setProductCashflows(Set<ProductCashflow> productCashflows) {
	// this.productCashflows = productCashflows;
	// }
	//
	// @OneToMany(fetch = FetchType.LAZY, mappedBy = "marketVariable")
	// public Set<PositionGreeks> getPositionGreekses() {
	// return this.positionGreekses;
	// }
	//
	// public void setPositionGreekses(Set<PositionGreeks> positionGreekses) {
	// this.positionGreekses = positionGreekses;
	// }
	//
	// @OneToOne(fetch = FetchType.LAZY, mappedBy = "marketVariable")
	// @Size(max = 20)
	// public MacroIndex getMacroIndex() {
	// return this.macroIndex;
	// }
	//
	// public void setMacroIndex(MacroIndex macroIndex) {
	// this.macroIndex = macroIndex;
	// }
	//
	// @OneToOne(fetch = FetchType.LAZY, mappedBy = "marketVariable")
	// @Size(max = 20)
	// public InterestRate getInterestRate() {
	// return this.interestRate;
	// }
	//
	// public void setInterestRate(InterestRate interestRate) {
	// this.interestRate = interestRate;
	// }
	//
	// @OneToOne(fetch = FetchType.LAZY, mappedBy = "marketVariable")
	// @Size(max = 20)
	// public FxCash getFxCash() {
	// return this.fxCash;
	// }
	//
	// public void setFxCash(FxCash fxCash) {
	// this.fxCash = fxCash;
	// }
	//
	// @OneToOne(fetch = FetchType.LAZY, mappedBy = "marketVariableByMvId")
	// @Size(max = 20)
	// public Futures getFuturesByMvId() {
	// return this.futuresByMvId;
	// }
	//
	// public void setFuturesByMvId(Futures futuresByMvId) {
	// this.futuresByMvId = futuresByMvId;
	// }
	//
	// @OneToMany(fetch = FetchType.LAZY, mappedBy =
	// "marketVariableByUnderlyingId")
	// public Set<Futures> getFuturesesForUnderlyingId() {
	// return this.futuresesForUnderlyingId;
	// }
	//
	// public void setFuturesesForUnderlyingId(Set<Futures>
	// futuresesForUnderlyingId) {
	// this.futuresesForUnderlyingId = futuresesForUnderlyingId;
	// }
	//
	// @OneToMany(fetch = FetchType.LAZY, mappedBy = "marketVariable")
	// public Set<EtfPdf> getEtfPdfs() {
	// return this.etfPdfs;
	// }
	//
	// public void setEtfPdfs(Set<EtfPdf> etfPdfs) {
	// this.etfPdfs = etfPdfs;
	// }
	//
	// @OneToOne(fetch = FetchType.LAZY, mappedBy = "marketVariable")
	// @Size(max = 20)
	// public Etf getEtf() {
	// return this.etf;
	// }
	//
	// public void setEtf(Etf etf) {
	// this.etf = etf;
	// }
	//
	// @OneToMany(fetch = FetchType.LAZY, mappedBy = "marketVariable")
	// public Set<SyntheticDetail> getSyntheticDetails() {
	// return this.syntheticDetails;
	// }
	//
	// public void setSyntheticDetails(Set<SyntheticDetail> syntheticDetails) {
	// this.syntheticDetails = syntheticDetails;
	// }
	//
	// @OneToOne(fetch = FetchType.LAZY, mappedBy = "marketVariable")
	// @Size(max = 20)
	// public BondIndex getBondIndex() {
	// return this.bondIndex;
	// }
	//
	// public void setBondIndex(BondIndex bondIndex) {
	// this.bondIndex = bondIndex;
	// }
	//
	// @OneToOne(fetch = FetchType.LAZY, mappedBy = "marketVariable")
	// @Size(max = 20)
	// public Bond getBond() {
	// return this.bond;
	// }
	// public void setBond(Bond bond) {
	// this.bond = bond;
	// }
	//
	// @OneToOne(fetch = FetchType.LAZY, mappedBy = "marketVariableByMvId")
	// @Size(max = 20)
	// public Options getOptionsByMvId() {
	// return this.optionsByMvId;
	// }
	//
	// public void setOptionsByMvId(Options optionsByMvId) {
	// this.optionsByMvId = optionsByMvId;
	// }
	//
	// @OneToMany(fetch = FetchType.LAZY, mappedBy =
	// "marketVariableByUnderlyingId")
	// public Set<Options> getOptionsesForUnderlyingId() {
	// return this.optionsesForUnderlyingId;
	// }
	//
	// public void setOptionsesForUnderlyingId(Set<Options>
	// optionsesForUnderlyingId) {
	// this.optionsesForUnderlyingId = optionsesForUnderlyingId;
	// }
	//
	@Transient
	// @OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public List<Position> getPositions() {
		return this.positions;
	}

	public void setPositions(List<Position> positions) {
		this.positions = positions;
	}

	@Override
	public int compareTo(MarketVariable other) {
		return 10 * this.mvType.getRfType().compareTo(other.mvType.getRfType()) + this.mvName.compareTo(other.mvName);
		// return 0;
	}

	// @Override
	// @AnnoMethodTree(order=90, init=false)
	// @Transient
	// public String getIdString() {
	// // TODO Auto-generated method stub
	// return null;
	// }

	private EShockType shockType;
	private double shockValue;

	@Transient
	public EShockType getShockType() {
		return shockType;
	}

	public void setShockType(EShockType shockType) {
		this.shockType = shockType;
	}

	@Transient
	public double getShockValue() {
		return shockValue;
	}

	public void setShockValue(double shockValue) {
		this.shockValue = shockValue;
	}

}
